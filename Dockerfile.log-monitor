# Dockerfile para el servicio de monitoreo de logs
FROM node:18-alpine

# Instalar dependencias del sistema
RUN apk add --no-cache curl

# Establecer directorio de trabajo
WORKDIR /app

# Crear package.json para el monitor de logs
RUN echo '{
  "name": "naturepharma-log-monitor",
  "version": "1.0.0",
  "description": "Monitor de logs para NaturePharma Services",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js"
  },
  "dependencies": {
    "express": "^4.18.2",
    "socket.io": "^4.7.2",
    "cors": "^2.8.5",
    "dockerode": "^3.3.5",
    "winston": "^3.10.0"
  },
  "devDependencies": {
    "nodemon": "^3.0.1"
  }
}' > package.json

# Instalar dependencias
RUN npm install

# Copiar archivos del servidor
COPY log-monitor/ .

# Crear usuario no-root
RUN addgroup -g 1001 -S nodejs && \
    adduser -S logmonitor -u 1001

# Cambiar permisos
RUN chown -R logmonitor:nodejs /app

# Cambiar a usuario no-root
USER logmonitor

# Exponer puerto
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Comando de inicio
CMD ["npm", "start"]