#!/bin/bash

# Script de diagn√≥stico y construcci√≥n del sistema NaturePharma
# Este script ayuda a identificar y resolver problemas de construcci√≥n

set -e

# Cambiar al directorio del script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

echo "üîç Diagn√≥stico del Sistema NaturePharma"
echo "======================================"
echo "üìÅ Directorio de trabajo: $SCRIPT_DIR"
echo ""

# Verificar que Docker est√© corriendo
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Error: Docker no est√° corriendo"
    echo "Por favor, inicia Docker y vuelve a intentar"
    exit 1
fi

# Verificar que docker-compose est√© disponible
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Error: docker-compose no est√° instalado"
    exit 1
fi

echo "‚úÖ Docker est√° corriendo"
echo "‚úÖ Docker Compose est√° disponible"
echo ""

# Verificar que exista docker-compose.yml
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå Error: No se encontr√≥ docker-compose.yml en el directorio actual"
    exit 1
fi

echo "‚úÖ docker-compose.yml encontrado"
echo ""

# Verificar que existan los Dockerfiles
echo "üîç Verificando Dockerfiles..."
services=("auth-service" "calendar-service" "laboratorio-service" "solicitudes-service" "Cremer-Backend" "Tecnomaco-Backend" "SERVIDOR_RPS")
missing_dockerfiles=()

# Mapeo de nombres de servicios a directorios
declare -A service_dirs
service_dirs["auth-service"]="auth-service"
service_dirs["calendar-service"]="calendar-service"
service_dirs["laboratorio-service"]="laboratorio-service"
service_dirs["solicitudes-service"]="ServicioSolicitudesOt"
service_dirs["Cremer-Backend"]="Cremer-Backend"
service_dirs["Tecnomaco-Backend"]="Tecnomaco-Backend"
service_dirs["SERVIDOR_RPS"]="SERVIDOR_RPS"

for service in "${services[@]}"; do
    # Obtener el directorio correspondiente
    if [[ "$service" == "solicitudes-service" ]]; then
        dir="ServicioSolicitudesOt"
    else
        dir="$service"
    fi
    
    if [ -f "$dir/Dockerfile" ]; then
        echo "‚úÖ $service/Dockerfile encontrado (en $dir/)"
    else
        echo "‚ùå $service/Dockerfile NO encontrado (buscando en $dir/)"
        missing_dockerfiles+=("$service")
    fi
done

if [ ${#missing_dockerfiles[@]} -gt 0 ]; then
    echo ""
    echo "‚ùå Error: Faltan los siguientes Dockerfiles:"
    for missing in "${missing_dockerfiles[@]}"; do
        echo "   ‚Ä¢ $missing/Dockerfile"
    done
    echo ""
    echo "Por favor, crea los Dockerfiles faltantes antes de continuar."
    exit 1
fi

echo ""
echo "‚úÖ Todos los Dockerfiles est√°n presentes"
echo ""

# Detener servicios existentes
echo "üîÑ Deteniendo servicios existentes..."
docker-compose down --remove-orphans
echo ""

# Limpiar im√°genes anteriores (opcional)
echo "üßπ Limpiando im√°genes anteriores..."
docker system prune -f
echo ""

# Construir servicios uno por uno para mejor diagn√≥stico
echo "üèóÔ∏è  Construyendo servicios individualmente..."
echo ""

for service in "${services[@]}"; do
    echo "üì¶ Construyendo $service..."
    if docker-compose build "$service"; then
        echo "‚úÖ $service construido exitosamente"
    else
        echo "‚ùå Error construyendo $service"
        echo "Revisa los logs arriba para m√°s detalles"
        exit 1
    fi
    echo ""
done

# Construir servicios restantes
echo "üì¶ Construyendo servicios restantes..."
docker-compose build log-monitor
echo ""

# Iniciar todos los servicios
echo "üöÄ Iniciando todos los servicios..."
docker-compose up -d
echo ""

# Esperar un momento para que los servicios se inicien
echo "‚è≥ Esperando que los servicios se inicien..."
sleep 15
echo ""

# Verificar estado de los servicios
echo "üìä Estado de los servicios:"
docker-compose ps
echo ""

# Verificar logs de servicios que puedan tener problemas
echo "üìã Verificando logs de servicios..."
echo ""

for service in "auth-service" "calendar-service" "laboratorio-service" "solicitudes-service"; do
    echo "üìÑ √öltimas l√≠neas de $service:"
    docker-compose logs --tail=5 "$service" || echo "‚ö†Ô∏è  No se pudieron obtener logs de $service"
    echo ""
done

echo "üéâ Proceso de construcci√≥n completado!"
echo "======================================"
echo "üì± Servicios disponibles:"
echo "   ‚Ä¢ Auth Service: http://localhost:4001"
echo "   ‚Ä¢ Calendar Service: http://localhost:3003"
echo "   ‚Ä¢ Laboratorio Service: http://localhost:3004"
echo "   ‚Ä¢ Solicitudes Service: http://localhost:3001"
echo "   ‚Ä¢ Cremer Backend: http://localhost:3002"
echo "   ‚Ä¢ Tecnomaco Backend: http://localhost:3006"
echo "   ‚Ä¢ Servidor RPS: http://localhost:4000"
echo "   ‚Ä¢ Log Monitor: http://localhost:8080"
echo "   ‚Ä¢ phpMyAdmin: http://localhost:8081"
echo "   ‚Ä¢ Nginx Gateway: http://localhost"
echo ""
echo "üìã Comandos √∫tiles:"
echo "   ‚Ä¢ Ver logs: docker-compose logs -f [servicio]"
echo "   ‚Ä¢ Ver estado: docker-compose ps"
echo "   ‚Ä¢ Detener sistema: docker-compose down"
echo "   ‚Ä¢ Reiniciar servicio: docker-compose restart [servicio]"
echo ""
echo "‚ú® ¬°Sistema listo para usar!"